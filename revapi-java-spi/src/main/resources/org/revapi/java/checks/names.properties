#
# Copyright 2014-2019 Lukas Krejci
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

java.missing.oldClass=class missing in old API archives
java.missing.newClass=class missing in new API archives
java.missing.oldSuperType=class inherits from a missing class
java.missing.newSuperType=class inherits from a missing class

java.element.nowDeprecated=element now deprecated
java.element.noLongerDeprecated=element no longer deprecated

java.class.added=class added
java.class.finalClassInheritsFromNewClass=new super class of final class
java.class.kindChanged=class kind changed
java.class.noLongerAbstract=class no longer abstract
java.class.noLongerFinal=class no longer final
java.class.noLongerImplementsInterface=class no longer implements interface
java.class.noLongerInheritsFromClass=removed super class
java.class.nonFinalClassInheritsFromNewClass=new super class of non-final class
java.class.nonPublicPartOfAPI=non-public class in API
java.class.nowAbstract=class now abstract
java.class.nowCheckedException=class now checked exception
java.class.nowFinal=class now final
java.class.nowImplementsInterface=class implements interface
java.class.removed=class removed
java.class.visibilityIncreased=visibility increased
java.class.visibilityReduced=visibility reduced
java.class.superTypeTypeParametersChanged=type parameters of super-type changed
java.class.externalClassExposedInAPI=external class in API
java.class.externalClassNoLongerExposedInAPI=external class no longer in API
java.class.defaultSerializationChanged=default serialization changed

java.annotation.added=new annotation
java.annotation.attributeAdded=annotation attribute added
java.annotation.attributeRemoved=annotation attribute removed
java.annotation.attributeValueChanged=annotation attribute changed
java.annotation.removed=removed annotation
java.annotation.noLongerInherited=annotation no longer inherited
java.annotation.nowInherited=annotation now inherited

java.field.added=field added
java.field.addedStaticField=static field added
java.field.removed=field removed
java.field.movedToSuperClass=field moved to superclass
java.field.inheritedNowDeclared=inherited field now directly declared
java.field.removedWithConstant=field with constant removed
java.field.constantValueChanged=constant field changed value
java.field.nowConstant=field now constant
java.field.nowFinal=field now final
java.field.nowStatic=field now static
java.field.noLongerConstant=field no longer constant
java.field.noLongerFinal=field no longer final
java.field.noLongerStatic=field no longer static
java.field.typeChanged=field type changed
java.field.serialVersionUIDUnchanged=serialVersionUID unchanged
java.field.visibilityIncreased=visibility increased
java.field.visibilityReduced=visibility reduced
java.field.enumConstantOrderChanged=enum constants reordered
java.field.serialVersionUIDChanged=serialVersionUID constant changed

java.method.abstractMethodAdded=abstract method added
java.method.added=method added
java.method.addedToInterface=method added to interface
java.method.attributeRemovedFromAnnotationType=removed attribute
java.method.attributeWithDefaultAddedToAnnotationType=new attribute with default on annotation
java.method.attributeWithNoDefaultAddedToAnnotationType=new attribute without default on annotation
java.method.defaultMethodAddedToInterface=default method added to interface
java.method.defaultValueAdded=annotation attribute now has default value
java.method.defaultValueChanged=annotation attribute default value changed
java.method.defaultValueRemoved=annotation attribute no longer has default value
java.method.finalMethodAddedToNonFinalClass=final method added to non-final class
java.method.noLongerDefault=method no longer default
java.method.noLongerFinal=method no longer final
java.method.movedToSuperClass=method moved to superclass
java.method.inheritedMovedToClass=inherited method moved to class
java.method.nowDefault=mehod now default
java.method.nowFinal=method now final
java.method.nowFinalInFinalClass=method in final class now final
java.method.numberOfParametersChanged=number of parameters changed
java.method.parameterTypeChanged=parameter type changed
java.method.parameterTypeParameterChanged=type parameter of method parameter changed
java.method.removed=method removed
java.method.returnTypeChanged=return type changed
java.method.returnTypeTypeParametersChanged=return type changed type parameter
java.method.returnTypeChangedCovariantly=return type changed covariantly
java.method.visibilityIncreased=visibility increased
java.method.visibilityReduced=visibility reduced
java.method.noLongerStatic=method no longer static
java.method.nowStatic=method now static
java.method.staticMethodAddedToInterface=static method added to interface
java.method.exception.checkedAdded=Method newly throws checked exceptions
java.method.exception.checkedRemoved=Method no longer throws checked exceptions
java.method.exception.runtimeAdded=Method newly throws runtime exceptions
java.method.exception.runtimeRemoved=Method no longer throws runtime exceptions
java.method.nowAbstract=Method now abstract
java.method.noLongerAbstract=Method no longer abstract

java.generics.elementNowParameterized=element now parameterized
java.generics.formalTypeParameterAdded=formal type parameter added
java.generics.formalTypeParameterRemoved=formal type parameter removed
java.generics.formalTypeParameterChanged=formal type parameter changed
