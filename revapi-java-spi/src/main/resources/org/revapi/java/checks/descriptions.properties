#
# Copyright 2014-2019 Lukas Krejci
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

java.missing.oldClass=Class ''{0}'' could not be found in the archives of the old API. It has been detected as \
contributing to the API and thus the analysis results may be incorrect.
java.missing.newClass=Class ''{0}'' could not be found in the archives of the new API. It has been detected as \
contributing to the API and thus the analysis results may be incorrect.
java.missing.superType=Class inherits from ''{0}'' which was not found in the supplied archives. Analysis may be \
incorrect.
java.missing.oldSuperType=Class inherits from ''{0}'' which was not found in the supplied archives of the old API. \
Analysis may be incorrect.
java.missing.newSuperType=Class inherits from ''{0}'' which was not found in the supplied archives of the new API. \
Analysis may be incorrect.

java.element.nowDeprecated=The element is now deprecated.
java.element.noLongerDeprecated=The element is no longer deprecated.

java.class.added=Class was added.
java.class.finalClassInheritsFromNewClass=Final class now inherits from ''{0}''.
java.class.kindChanged=Class kind changed from ''{0}'' to ''{1}''.
java.class.noLongerAbstract=Class is no longer abstract.
java.class.noLongerFinal=Class is no longer final.
java.class.noLongerImplementsInterface=Class no longer implements interface ''{0}''.
java.class.noLongerInheritsFromClass=Class no longer inherits from ''{0}''.
java.class.nonFinalClassInheritsFromNewClass=Non-final class now inherits from ''{0}''.
java.class.nonPublicPartOfAPI=Class ''{0}'' is indirectly included in the API (by the means of method return type for \
example) but the class is not accessible (neither public nor protected).
java.class.nowAbstract=Class is now abstract.
java.class.nowCheckedException=Throwable class is now a checked exception.
java.class.nowFinal=Class is now final.
java.class.nowImplementsInterface=Class now implements interface ''{0}''.
java.class.removed=Class was removed.
java.class.visibilityIncreased=Visibility increased from ''{0}'' to ''{1}''.
java.class.visibilityReduced=Visibility was reduced from ''{0}'' to ''{1}''.
java.class.superTypeTypeParametersChanged=Super type''s type parameters changed from ''{0}'' to ''{1}''.
java.class.externalClassExposedInAPI=A class from supplementary archives is used in a public capacity in the API.
java.class.externalClassNoLongerExposedInAPI=A class from supplementary archives is no longer used in a public \
capacity in the API.
java.class.defaultSerializationChanged=The default serialization ID for the class has changed. This means that the new \
version of the class is not deserializable from the byte stream of a serialized old class.

java.annotation.added=Element newly annotated with ''{0}''.
java.annotation.attributeAdded=Attribute ''{0}'' of annotation ''{1}'' is now explicitly set.
java.annotation.attributeRemoved=Attribute ''{0}'' of annotation ''{1}'' is no longer explicitly set.
java.annotation.attributeValueChanged=Attribute ''{2}'' of annotation ''{0}'' changed value from ''{3}'' to ''{4}''.
java.annotation.removed=Element no longer annotated with ''{0}''.
java.annotation.noLongerInherited=Annotation type is no longer inherited.
java.annotation.nowInherited=Annotation type is now inherited.

java.field.added=Field added to class.
java.field.addedStaticField=Static field added to class.
java.field.removed=Field removed from class.
java.field.movedToSuperClass=Field previously defined in ''{0}'' was found in the superclass ''{1}'' in the new version.
java.field.inheritedNowDeclared=Field previously inherited from ''{0}'' is declared on ''{1}'' in the new version.
java.field.removedWithConstant=Field with constant value has been removed.
java.field.constantValueChanged=Constant field changed value from ''{0}'' to ''{1}''.
java.field.nowConstant=Field now declares a compile time constant value ''{0}''.
java.field.nowFinal=Field is now final.
java.field.nowStatic=Field is now static.
java.field.noLongerConstant=Field no longer declares a constant value.
java.field.noLongerFinal=Field is no longer final.
java.field.noLongerStatic=Field is no longer static.
java.field.typeChanged=The type of the field changed from ''{0}'' to ''{1}''.
java.field.serialVersionUIDUnchanged=The class changed in an incompatible way with regards to serialization but the \
serialVersionUID field stayed unchanged. This might be ok and/or desired but is suspicious.
java.field.visibilityIncreased=Visibility increased from ''{0}'' to ''{1}''.
java.field.visibilityReduced=Visibility was reduced from ''{0}'' to ''{1}''.
java.field.enumConstantOrderChanged=The enum constant was defined on position {0} but is now on {1}. The user code \
can break if it relies on the return value of the "ordinal()" method.
java.field.serialVersionUIDChanged=serialVersionUID constant changed. Objects serialized using the old version of the \
class will no longer be deserializable.

java.method.abstractMethodAdded=Abstract method was added.
java.method.added=Method was added.
java.method.addedToInterface=Method was added to an interface.
java.method.attributeRemovedFromAnnotationType=The annotation no longer has an attribute.
java.method.attributeWithDefaultAddedToAnnotationType=The annotation has a new attribute with a default value.
java.method.attributeWithNoDefaultAddedToAnnotationType=The annotation has a new attribute without a default value.
java.method.defaultMethodAddedToInterface=A default method has been added to the interface.
java.method.defaultValueAdded=Default value was added to the attribute.
java.method.defaultValueChanged=Default value of attribute ''{0}'' of annotation ''{1}'' changed value from ''{2}'' to \
''{3}''.
java.method.defaultValueRemoved=Default value was removed from the attribute.
java.method.finalMethodAddedToNonFinalClass=A final method has been added to an inheritable class.
java.method.noLongerDefault=The interface no longer has the default implementation of the method.
java.method.noLongerFinal=Method is no longer final.
java.method.movedToSuperClass=The method used to be declared in class ''{0}'' but is now declared in superclass ''{1}''.
java.method.inheritedMovedToClass=The method was previously declared in superclass ''{0}'' but is now declared in \
class ''{1}''.
java.method.nowDefault=Method has the default implementation in the interface now.
java.method.nowFinal=Method is now final.
java.method.nowFinalInFinalClass=Method is now final in a final class.
java.method.numberOfParametersChanged=The number of parameters of the method have changed.
java.method.parameterTypeChanged=The type of the parameter changed from ''{0}'' to ''{1}''.
java.method.parameterTypeParameterChanged=The type parameter of method parameter changed. The original type was ''{0}''\
  while the new type is ''{1}''.
java.method.removed=Method was removed.
java.method.returnTypeChanged=The return type changed from ''{0}'' to  ''{1}''.
java.method.returnTypeTypeParametersChanged=The return type changed from ''{0}'' to ''{1}''.
java.method.returnTypeChangedCovariantly=The return type changed covariantly from ''{0}'' to ''{1}''.
java.method.visibilityIncreased=visibility increased
java.method.visibilityReduced=visibility reduced
java.method.noLongerStatic=method no longer static
java.method.nowStatic=method now static
java.method.staticMethodAddedToInterface=A default method has been added to the interface.
java.method.exception.checkedAdded=Method newly throws checked exceptions: {0}.
java.method.exception.checkedRemoved=Method no longer throws checked exceptions: {0}.
java.method.exception.runtimeAdded=Method newly throws runtime exceptions: {0}.
java.method.exception.runtimeRemoved=Method no longer throws runtime exceptions: {0}.
java.method.nowAbstract=Method now abstract
java.method.noLongerAbstract=Method no longer abstract

java.generics.elementNowParameterized=Element now defines formal type parameters.
java.generics.formalTypeParameterAdded=A new formal type parameter added to element: ''{0}''.
java.generics.formalTypeParameterRemoved=The formal type parameter ''{0}'' was removed from the element.
java.generics.formalTypeParameterChanged=The formal type parameter changed from ''{0}'' to ''{1}''.
